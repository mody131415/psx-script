--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==4) then v24=function()local v38=v23();local v39=v23();return (( -((78 + 495) -(493 + 78)) * v20(v39,72 -40)) + 1) * ((267 -(164 + 101))^(v20(v39,21,150 -119) -((463 -221) + 781))) * ((((v20(v39,1 + 0 + 0,13 + 7) * (2^((62 -43) + 13))) + v38)/((5 -3)^(165 -113))) + (555 -(152 + 402)));end;v25=nil;v25=function(v30)local v40=0 -0;local v41;local v42;while true do if (v40==(1 -0)) then v41=v3(v15,v18,(v18 + v30) -(1 -0));v18=v18 + v30;v40=1779 -(1629 + 148);end if (v40==(183 -(133 + 48))) then v42={};for v72=302 -(117 + 184), #v41 do v42[v72]=v2(v1(v3(v41,v72,v72)));end v40=(4 + 0) -(4 -3);end if (v40==(0 + 0)) then v41=nil;if  not v30 then v30=v23();if (v30==(1308 -(1194 + 114))) then return "";end end v40=2 -1;end if (v40==(1822 -(1634 + 185))) then return v6(v42);end end end;v17=5;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then v19=v0(v3(v31,1,1));return "";else local v63=v2(v0(v31,16));if v19 then local v74=v5(v63,v19);v19=nil;return v74;else return v63;end end end);v17=1;end if (v17==5) then v26=v23;v27=nil;v27=function(...)return {...},v11("#",...);end;v17=6;end if (v17==7) then v29=function(v32,v33,v34)local v43=v32[1];local v44=v32[2];local v45=v32[3];return function(...)local v64=0;local v65;local v66;local v67;local v68;local v69;while true do if (0==v64) then v65=1;v66= -1;v64=1;end if (v64==3) then A,B=v27(v10(v69));if  not A[1] then local v76=0;local v77;while true do if (v76==0) then v77=v32[4][v65] or "?";error("Script error at ["   .. v77   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end if (2==v64) then v69=nil;v69=function()local v78=v43;local v79=v44;local v80=v45;local v81=v27;local v82={};local v83={};local v84={};for v89=0,v68 do if ((((5528 -3573) -(52 + 94))<=(9910 -6580)) and (v89>=v80)) then v82[v89-v80]=v67[v89 + (2 -1)];else v84[v89]=v67[v89 + 1 + 0];end end local v85=(v68-v80) + (1 -0);local v86;local v87;while true do local v90=0;local v91;local v92;while true do if (((0 + 0)==v90) or (3922<=(2915 -795))) then v91=0 -(0 + 0);v92=nil;v90=1;end if ((v90==(1 -0)) or ((1717 + 2204)>=(4537 -(28 + 541)))) then while true do if (((1396 + 2166)<=((2238 -1264) + (5946 -2430))) and (v91==(0 + 0))) then v92=0 -0;while true do if (((428 + 3698)>(3981 -(950 + 39))) and (v92==1)) then if (((628 + 358)<=(2207 -((991 -(252 + 722)) + 71))) and (v87<=21)) then if (((7100 -2116)>=3278) and (v87<=((2312 -1360) -(813 + 129)))) then if ((v87<=4) or ((3781 + 628)<(22 -(3 + 6)))) then if ((v87<=1) or ((4602 -2749)>(2546 -(76 + (403 -299))))) then if (((13884 -9155)==(5033 -(199 + (247 -(118 + 24))))) and (v87==((4417 -2810) -(1387 + 220)))) then v84[v86[805 -(101 + 702)]]=v84[v86[3]] + v84[v86[4 + 0]];else v65=v86[7 -4];end elseif ((v87<=(2 + 0)) or ((1856 + 135)<=(1888 -1478))) then local v127=0 -(0 + 0);local v128;local v129;local v130;while true do if (((123 -84)<=1263) and (v127==(1022 -(661 + 361)))) then v128=1208 -(1071 + 137);v129=nil;v127=1;end if ((v127==(1 + 0)) or ((780 + 81)==(5936 -3460))) then v130=nil;while true do if ((v128==(0 + 0)) or (1967<=(746 + 1118))) then local v239=0 + (920 -(213 + 707));while true do if (((9 + 96)<=(2122 + 1024)) and (v239==0)) then v129=0 + 0;v130=nil;v239=938 -(604 + 227 + 106);end if (((1064 -(98 + 965))==v239) or ((4032 -(468 + 25))>(9238 -5180))) then v128=287 -(279 + 7);break;end end end if ((v128==1) or ((5421 -(345 + 1179))<((281 + 1116) -(3795 -2939)))) then while true do if ((((3389 -(123 + 145)) -(96 + 176))>=(4535 -((3503 -2309) + 788))) and (v129==(0 + 0))) then v130=v86[2];v84[v130]=v84[v130](v12(v84,v130 + (1458 -(102 + 1355)),v86[3]));break;end end break;end end break;end end elseif ((v87==(8 -5)) or (4395<(2814 + 89))) then v84[v86[5 -3]]=v84[v86[985 -(408 + 574)]][v86[16 -12]];else v84[v86[1 + 1]]();end elseif (((1955 -1015)>=(213 + 377)) and (v87<=(6 + (1638 -(1285 + 352))))) then if ((((6757 -(438 + 1533)) + 208)==(5419 -((1271 -863) + 17))) and (v87<=5)) then v84[v86[2]]=v86[7 -4];elseif ((((2816 -1018) + 309)>(3132 -(53 + 1847))) and (v87>(1845 -(482 + 1357)))) then v33[v86[(1242 -(676 + 563)) -0]]=v84[v86[6 -4]];else do return;end end elseif (((5361 -(804 + 869))==(2794 + (1421 -527))) and (v87<=(1378 -((1061 -(464 + 422)) + 1195)))) then local v133=0 -0;local v134;local v135;local v136;while true do if (((14454 -10387)<(807 + (5274 -(542 + 1404)))) and (v133==1)) then v136=nil;while true do if (((769 -501)==((107 + 1202) -(202 + (1523 -684)))) and ((0 + 0)==v134)) then local v240=493 -(156 + 337);local v241;while true do if (((4728 -(673 + (917 -(451 + 162))))>=2406) and (v240==(0 -0))) then v241=0 + 0 + (1627 -(1123 + 504));while true do if ((v241==(0 + 0)) or (((2854 + 5554) -(4838 + 531))==(749 -(207 + 91)))) then v135=v86[1 + 1];v136=v84[v86[3]];v241=1056 -(549 + 506);end if ((v241==(1 + 0)) or ((791 -475)==2197)) then v134=2 -1;break;end end break;end end end if ((v134==1) or ((1063 + 3650)<(2301 -(21 + 1251)))) then v84[v135 + 1]=v136;v84[v135]=v136[v86[1 + 3]];break;end end break;end if (((1413 -524)==889) and (v133==0)) then v134=0 + 0;v135=nil;v133=873 -(840 + 32);end end elseif ((v87>((1436 -(541 + 5)) -((1547 -(368 + 331)) + (374 -(117 + 224))))) or ((4111 -2372)>=(3846 -(1004 + 226)))) then local v169=0 -0;local v170;while true do if ((v169==(343 -(183 + 35 + 125))) or ((3635 -(853 + 848))<(120 -47))) then v170=v86[2 + 0];v84[v170]=v84[v170]();break;end end else local v171=0 -0;local v172;local v173;local v174;local v175;local v176;while true do if ((v171==(6 -4)) or (3873<(1588 -1041))) then v176=nil;while true do if (((5783 -(781 + (952 -539)))>(4375 -2889)) and (2==v172)) then while true do if ((v173==((594 -(192 + 402)) -0)) or (((20943 -15493) -2015)<=(1574 + 765))) then local v292=0;while true do if ((v292==(279 -(4 + 51 + 224))) or ((13900 -9151)<(4387 -(40 + 24)))) then local v323=0 -0;while true do if ((3800>((3803 -1487) + 392)) and (v323==(620 -(188 + (1447 -1015))))) then v174=v86[951 -(278 + 671)];v175={v84[v174](v84[v174 + (675 -(447 + 227))])};v323=2 -1;end if ((v323==(563 -((937 -(24 + 825)) + 474))) or (4043<=3892)) then v292=(2 -0) -1;break;end end end if ((((1449 -433) -(66 + 949))==v292) or ((21911 -16947)<((1974 -(111 + 675)) -(423 + 289)))) then v173=1130 -(113 + 1016);break;end end end if (((4911 -(978 + 893))>=(12809 -9947)) and (v173==1)) then v176=0;for v308=v174,v86[4] do local v309=378 -(337 + 41);local v310;local v311;while true do if ((2519<(10548 -7969)) and (v309==0)) then v310=0 -(847 -(14 + 833));v311=nil;v309=1954 -(1857 + 96);end if ((v309==(1 -0)) or (1838==(3694 -2702))) then while true do if ((3476<=4864) and ((0 + (381 -(364 + 17)))==v310)) then v311=923 -(844 + (126 -47));while true do if ((0==v311) or ((2432 -(1095 + (775 -501)))>=(4018 -812))) then v176=v176 + 1 + 0 + 0;v84[v308]=v175[v176];break;end end break;end end break;end end end break;end end break;end if (((4098 -(1041 + 898))==(3916 -(1695 + 62))) and (v172==(1057 -(267 + 789)))) then local v258=1471 -(159 + 1312);while true do if (((10353 -6268)>(7148 -3205)) and (v258==(548 -(353 + 195)))) then v175=nil;v176=nil;v258=1;end if ((v258==1) or ((3141 -(1396 + 137))>=(7823 -3308))) then v172=3 -1;break;end end end if (((0 + 0)==v172) or (3335<(3392 -(75 + 162)))) then v173=1503 -(732 + 771);v174=nil;v172=1169 -(221 + 947);end end break;end if (((2388 -(347 + 115))<=(2439 + 748)) and (v171==(2 -1))) then v174=nil;v175=nil;v171=7 -(7 -2);end if ((v171==(239 -(32 + 207))) or ((1005 + 2609)<=2803)) then v172=0;v173=nil;v171=154 -(11 + 142);end end end elseif ((v87<=(34 -(45 -26))) or (1402>=(15353 -10670))) then if (((1807 -((1338 -(821 + 191)) + 312))>=(838 + 71)) and (v87<=(8 + 4))) then if (((9794 -4915)>=((2530 -(159 + 115)) -(256 + 22 + 1417))) and (v87==(15 -4))) then if ((((2246 -(30 + 301)) + 2635)>=3544) and (v86[5 -3]<v84[v86[225 -(26 + 195)]])) then v65=v65 + 1;else v65=v86[3 + (0 -0)];end else local v137=1475 -(250 + (1671 -446));local v138;local v139;local v140;while true do if ((4968>(941 + 3232)) and (v137==(0 + 0))) then v138=1438 -(790 + 648);v139=nil;v137=1 + 0;end if (((967 -611)<=1254) and (v137==((502 + 351) -(813 + (1764 -(258 + 1467)))))) then v140=nil;while true do if ((v138==1) or ((1876 -(673 + 900))==(4004 -(327 + 1111)))) then for v257=v139 + (107 -(91 + 15)),v86[3] do v7(v140,v84[v257]);end break;end if ((0==v138) or ((11773 -7613)<=(2907 -(407 + 1454)))) then local v245=0;while true do if (((1600 -742)==(2441 -(359 + 1224))) and (1==v245)) then v138=(2166 -(745 + 31)) -(923 + 466);break;end if (((2438 -1418)<((20190 -13780) -4940)) and (v245==0)) then v139=v86[4 -2];v140=v84[v139];v245=1 + 0;end end end end break;end end end elseif ((v87<=13) or ((374 -96)>=4420)) then v84[v86[4 -(5 -3)]]=v29(v79[v86[462 -(63 + 396)]],nil,v34);elseif (((4069 -1891)>((10643 -8184) -(888 + 529))) and (v87>(4 + 10))) then if (((2263 -(2039 -(522 + 1081)))==(1790 + 37)) and v84[v86[2]]) then v65=v65 + (1434 -(494 + 939));else v65=v86[3];end elseif ((v84[v86[2]]<v86[4]) or (4866<(2164 -(184 + 103)))) then v65=v65 + (2 -1);else v65=v86[2 + 1];end elseif (((3517 -(147 + 1516))<4407) and (v87<=(10 + 8))) then if (((1326 -(830 + 17))<=(1081 + (1331 -(62 + 677)))) and (v87<=16)) then local v142=0 + 0;local v143;local v144;while true do if ((v142==(2 -1)) or (2402<=(101 + 22))) then while true do if ((v143==(896 -(615 + 281))) or ((301 + 3945)<=(1824 -1152))) then v144=v84[v86[13 -9]];if ( not v144 or (831<325)) then v65=v65 + (657 -(459 + 197));else local v259=0;local v260;local v261;while true do if ((v259==(1 + 0)) or ((4095 -(216 + 452))==(2373 + 845))) then while true do if ((2400<=(3820 -(774 + 238))) and (v260==(0 + 0))) then v261=178 -(41 + 137);while true do if (((15570 -11240)>=(5467 -3106)) and (v261==((0 + 0) -0))) then v84[v86[805 -(560 + 243)]]=v144;v65=v86[1130 -(552 + (2544 -(773 + 1196)))];break;end end break;end end break;end if ((v259==(0 -0)) or (((3284 -2103) + 1680)>((48 + 8643) -3921))) then v260=0 -0;v261=nil;v259=(551 -(529 + 21)) + 0;end end end break;end end break;end if ((((0 -0) -0)==v142) or ((2646 -(1226 + 552))>(2801 -(340 + 301)))) then v143=0 + 0;v144=nil;v142=1 -0;end end elseif ((v87>(50 -33)) or ((458 + 3040)<=(4494 -2907))) then if ((v84[v86[(5 + 0) -3]]==v86[(11 + 6) -13]) or (3879<=(48 + (3788 -(1567 + 28))))) then v65=v65 + 1;else v65=v86[2 + 1];end elseif ((982<=(2600 -(462 + 249))) and  not v84[v86[(3 + 0) -1]]) then v65=v65 + 1;else v65=v86[1367 -(443 + 921)];end elseif (((1592 -939)<706) and (v87<=(1310 -(992 + 299)))) then v84[v86[(5 + 0) -3]]=v33[v86[6 -3]];elseif (((2057 -(903 + 423))==731) and (v87>(10 + 10))) then local v178=635 -(301 + 334);local v179;local v180;local v181;local v182;local v183;while true do if ((1211>(2404 -1469)) and (v178==(2 + 0))) then v183=nil;while true do if (((1 + 184)<(4556 -(288 + (1226 -611)))) and (v179==(257 -(96 + 161)))) then local v262=0 -0;while true do if ((((6314 + 929) -4024)<4128) and (v262==(1 + 0))) then v179=1;break;end if ((v262==(1424 -(139 + 1285))) or (1683>=3392)) then v180=0 -0;v181=nil;v262=1;end end end if ((v179==(1 + 0 + 0)) or ((543 -(203 + 68))>3668)) then local v263=119 -(33 + 86);while true do if ((((7176 -5233) + 328)>(1326 -463)) and (v263==(368 -(126 + 89 + 153)))) then v182=nil;v183=nil;v263=1 -(1902 -(1613 + 289));end if ((v263==(862 -(423 + 438))) or ((4966 -3251)>(3037 -(17 + 96)))) then v179=3 -1;break;end end end if ((v179==(2 + 0)) or ((2130 + 1182)>4201)) then while true do if (((4716 -3437)<4388) and (v180==(1921 -(1595 + 325)))) then local v293=0 -0;local v294;while true do if (((2213 -(437 + 229 + (304 -(47 + 178))))<=(10320 -6479)) and (v293==0)) then v294=1217 -(96 + 1121);while true do if (((10 + 25)==35) and (v294==(0 -0))) then v183={};v182=v9({},{__index=function(v338,v339)local v352=(2732 -(46 + 759)) -(1253 + 674);local v353;local v354;local v355;while true do if ((v352==(796 -(229 + 566))) or (2642==(2470 -((679 -418) + 1255)))) then v355=nil;while true do if (((1717 -706)<=((3919 -1024) -1764)) and ((0 + 0)==v353)) then local v378=0;while true do if ((4674>(427 + 895)) and (v378==0)) then v354=0 + 0;v355=nil;v378=1;end if ((v378==1) or ((7211 -(15790 -12235))>=4729)) then v353=167 -(139 + 27);break;end end end if ((v353==1) or (((6982 -(1061 + 329)) -(11 + 1233))>4368)) then while true do if ((v354==(0 + 0)) or ((3324 -(748 + (564 -(6 + 183))))<1538)) then local v389=0 -0;local v390;while true do if ((v389==(0 + 0)) or (4903<=2736)) then v390=0;while true do if (((2382 -(407 + 630))<(2658 -(233 + 28))) and ((1610 -(13 + 1597))==v390)) then local v401=0;while true do if (((5796 -3698)==(3289 -(531 + 660))) and (v401==(242 -(224 + 18)))) then v355=v183[v339];return v355[1][v355[570 -(389 + 179)]];end end end end break;end end end end break;end end break;end if (((0 + 0)==v352) or ((39 -23)==(1496 + 770))) then v353=0;v354=nil;v352=1;end end end,__newindex=function(v340,v341,v342)local v356=0 -0;local v357;local v358;while true do if (((286 + 96)<=(5362 -(508 + 1267))) and (v356==(0 + 0))) then v357=0 + 0;v358=nil;v356=15 -(7 + 7);end if (((1758 -(1527 + 230))==v356) or ((6096 -(209 + 1417))<(247 + 347))) then while true do if (((257 + 556)<((9087 -5580) -1574)) and (v357==0)) then v358=v183[v341];v358[68 -(37 + 30)][v358[405 -((72 -45) + 376)]]=v342;break;end end break;end end end});v294=1 + 0;end if (((3189 -2322)<=(12686 -8437)) and (v294==(593 -(272 + 320)))) then v180=1 + (337 -(75 + 261));break;end end break;end end end if ((v180==(0 -0)) or ((5370 -(216 + 1045))<(3602 -(7 + 221)))) then local v295=0 + 0 + 0;local v296;while true do if ((v295==0) or ((5845 -(865 + 196))>(5361 -(146 + 300)))) then v296=0 + 0;while true do if ((v296==1) or ((2951 -(12 + 67 + 62))>(1004 + (10094 -7648)))) then v180=4 -3;break;end if (((0 -0)==v296) or ((342 + 795)==(826 + 1541))) then local v332=1732 -(959 + 773);while true do if ((v332==(3 -2)) or ((4621 + 102)<3617)) then v296=1;break;end if ((v332==(0 -0)) or ((4809 -(432 + 284))==(7715 -5026))) then v181=v79[v86[(1055 -(625 + 429)) + 2]];v182=nil;v332=3 -2;end end end end break;end end end if ((1986==(3106 -(1091 + 29))) and (v180==((2 -1) + 1))) then for v312=1723 -(277 + 1445),v86[4] do local v313=318 -(166 + 152);local v314;while true do if (((7158 -2812)>571) and (v313==(1858 -(447 + 1410)))) then if ((v314[(822 -(122 + 199)) -(358 + 142)]==(616 -(340 + 239))) or ((658 + 540)<=(1523 -1188))) then v183[v312-1]={v84,v314[322 -(218 + 101)]};else v183[v312-(192 -(153 + 38))]={v33,v314[1 + 2]};end v83[ #v83 + 1 + 0]=v183;break;end if (((2400 -(752 + 981))<=3041) and (v313==((0 -0) + 0))) then local v327=0 + (1781 -(298 + 1483));while true do if ((((3335 + 2092) -(1086 + 23))>((12862 -7440) -(1121 + 678))) and (v327==(0 -0))) then v65=v65 + 1 + 0;v314=v78[v65];v327=1;end if (((605 + 194)==(2978 -2179)) and (v327==1)) then v313=1 + 0;break;end end end end end v84[v86[2]]=v29(v181,v182,v34);break;end end break;end end break;end if ((v178==(762 -(440 + 322))) or (3362>=(1219 + 3027))) then v179=0;v180=nil;v178=1 + 0;end if ((v178==(4 -3)) or ((187 + 123 + 3005)<186)) then v181=nil;v182=nil;v178=803 -(680 + 121);end end else local v184=0 + (0 -0);local v185;local v186;local v187;local v188;local v189;local v190;while true do if ((v184==(3 -1)) or ((746 + 2332)<((1094 -(137 + 178)) + 703))) then v189=nil;v190=nil;v184=3 -0;end if (((381 + 1105)<=(4136 -(103 + 1036))) and (v184==(1924 -(1021 + 900)))) then while true do if ((v185==2) or ((2021 -(148 + (1043 -(491 + 111))))>(628 + 1 + 2481))) then v190=nil;while true do if (((3530 + 257)>=(341 -(83 + 143))) and (v186==(1 + 0))) then local v298=0 + 0;local v299;while true do if ((v298==(1106 -(718 + 225 + 163))) or ((4050 -(383 + 654))>=(7832 -3008))) then v299=0;while true do if ((v299==(1180 -(780 + 399))) or ((12650 -8342)==(4113 -(279 + 22)))) then v186=4 -2;break;end if ((v299==(0 -0)) or ((2831 -(1357 + 365))>2544)) then local v335=0 + 0;while true do if ((v335==(0 -0)) or ((2558 -(706 + 32 + 593))>=(2180 -(36 + 35)))) then v66=(v189 + v187) -(2 -1);v190=1693 -(458 + (1365 -(33 + 97)));v335=2 -(1 -0);end if ((v335==(3 -2)) or (((12582 + 3834) -11660)<3016)) then v299=3 -2;break;end end end end break;end end end if ((v186==(0 + 0 + 0)) or ((4867 -(562 + 902))==(3197 -1565))) then local v300=0 + 0;local v301;while true do if (((600 + (1977 -(880 + 735)))==(1209 -247)) and (v300==(0 + (1263 -(1208 + 55))))) then v301=(2304 -(62 + 985)) -(787 + 470);while true do if (((1745 -(802 + 723))<=((2610 -867) + 2686)) and (v301==0)) then local v336=1317 -(321 + 996);while true do if ((v336==(1068 -(697 + 371))) or ((2184 -(491 + 603))>3801)) then v187=v86[5 -3];v188,v189=v81(v84[v187](v12(v84,v187 + (1253 -(642 + 610)),v86[7 -4])));v336=893 -(356 + 536);end if ((v336==1) or ((2557 -(1190 + 140))>(9990 -5980))) then v301=458 -(317 + 140);break;end end end if (((8087 -4710)==3377) and ((1 + 0)==v301)) then v186=1;break;end end break;end end end if (((10916 -8472)>=((2349 -(217 + 1348)) + 40)) and (v186==(2 + 0))) then for v315=v187,v66 do local v316=0 -0;local v317;local v318;while true do if (((5772 -(1375 + 349))<((7602 + 1643) -4645)) and (v316==(1 + 0))) then while true do if ((((7340 -5043) + 983)==(4847 -(1488 + 79))) and (v317==(0 + 0))) then v318=1443 -(1229 + 214);while true do if ((v318==(1895 -(234 + 1661))) or ((426 + 1759)<=(2824 -1787))) then v190=v190 + 1 + 0;v84[v315]=v188[v190];break;end end break;end end break;end if ((v316==((0 -0) + 0)) or (1047<=(1091 -(526 + 169)))) then v317=1768 -(1121 + 647);v318=nil;v316=1 + 0;end end end break;end end break;end if (((1289 -(511 + 209))==(1668 -1099)) and (v185==(2 -1))) then v188=nil;v189=nil;v185=4 -2;end if (((1850 -643)<=(1472 -(120 + 34))) and (v185==(1129 -(279 + 850)))) then local v264=0 + 0;while true do if ((v264==(0 -0)) or (190>=(1618 + 728))) then v186=0;v187=nil;v264=1;end if ((v264==(788 -(24 + 763))) or (((6370 -(32 + 38)) -(1535 + 197))<=(436 + 3120))) then v185=1732 -(1406 + 325);break;end end end end break;end if ((v184==(1 + 0)) or (2967<=((4224 -(522 + 905)) -(111 + (2747 -1383))))) then v187=nil;v188=nil;v184=2 + 0;end if ((v184==(0 -0)) or ((12720 -9977)<=1973)) then v185=0 -(674 -(526 + 148));v186=nil;v184=153 -(97 + 55);end end end elseif (((1526 -(473 + 12))<(1966 + 81)) and (v87<=(1139 -(215 + (3679 -2787))))) then if ((v87<=(1099 -(854 + 219))) or (((3624 + 274) -(546 + 125))>=4389)) then if (((86 + 4174 + 309)>=(1618 + 1751)) and (v87<=(12 + 5 + 6))) then if ((v87>((1936 -(1006 + 893)) -15)) or ((758 + (3301 -(398 + 757)))==(409 + 415))) then local v147=0;local v148;local v149;local v150;while true do if (((1569 -(90 + 1478))==v147) or ((186 + 1331)>=(1570 + 2185))) then v150=nil;while true do if ((v148==(1 + 0)) or ((10182 -8066)<=(1 + 11))) then while true do if ((v149==0) or ((2391 -(999 + 400))<=(1105 -657))) then v150=v86[1171 -(930 + 239)];v84[v150]=v84[v150](v12(v84,v150 + (584 -(44 + 539)),v66));break;end end break;end if (((7768 -5965)<=(5453 -(46 + 1450))) and (v148==0)) then local v247=812 -(218 + 594);while true do if ((3776>=(1612 -(545 + 474))) and ((3 -2)==v247)) then v148=1868 -(107 + 1760);break;end if ((v247==(0 + 0)) or (3076>(2191 + 1806))) then v149=0;v150=nil;v247=1;end end end end break;end if (((2791 + 1681)>(12672 -8284)) and (v147==(895 -(523 + 372)))) then v148=0 + 0;v149=nil;v147=1715 -(1344 + 101 + 269);end end elseif ((v86[2 -0]==v84[v86[(4 + 4) -4]]) or ((2966 -(308 + 924))>=(20704 -16549))) then v65=v65 + (2 -1);else v65=v86[670 -(228 + 439)];end elseif (((859 + 471 + 795)<=(5769 -(1041 + 510))) and (v87<=(32 -(512 -(6 + 498))))) then v84[v86[2]]={};elseif (((5597 -(441 + 801 + 187))>(3684 + 406)) and (v87==(12 + 13))) then v84[v86[467 -(254 + 168 + 43)]][v86[3]]=v84[v86[4]];else local v194=0 -0;local v195;local v196;local v197;while true do if (((3661 -(1259 + 386))>=(69 + 51)) and ((0 + 0)==v194)) then v195=0 -0;v196=nil;v194=1105 -(976 + 128);end if (((1 + 0)==v194) or ((1479 -(457 + 324))>(2714 -727))) then v197=nil;while true do if ((v195==(1355 -(792 + 562))) or ((3325 -((806 -(390 + 180)) + 1087))>=4818)) then for v282=v196 + (310 -(190 + 119)),v86[1 + 1 + 2] do v197=v197   .. v84[v282];end v84[v86[582 -(105 + 475)]]=v197;break;end if (((0 -(1970 -(289 + 1681)))==v195) or (((240 + 880) -(217 + 90))>1653)) then local v266=0;while true do if (((0 + (320 -(187 + 133)))==v266) or (4162<=1595)) then local v302=1728 -(1217 + 511);while true do if (((936 + 2160)>=(1282 -667)) and (v302==(1 + 0))) then v266=1;break;end if (((0 + 0)==v302) or ((3228 -1793)<=(733 + 495))) then v196=v86[2 + 1];v197=v84[v196];v302=1 -0;end end end if ((v266==(1 + 0)) or ((1784 -1134)>=((763 + 3343) -(269 + 134)))) then v195=1303 -(195 + 1107);break;end end end end break;end end end elseif ((v87<=(134 -105)) or (4523==(4117 -(215 + 1352)))) then if ((v87<=(25 + 2)) or ((480 + 967)>=(3756 + 1108))) then v84[v86[5 -3]]= #v84[v86[2 + 1]];elseif (((4720 -(1119 + 7))>1865) and (v87==(26 + 2))) then v84[v86[4 -(2 + 0)]][v86[3]]=v86[4];else local v200=156 -((261 -169) + 64);local v201;local v202;local v203;local v204;while true do if ((v200==(4 -2)) or (3530>(4526 -(676 + 265)))) then while true do if (((195 + 285)<=(5561 -3141)) and (v201==(1 + 0))) then v204=nil;while true do if ((v202==(1231 -(853 + 378))) or ((5758 -2515)<=(1237 + (2537 -(953 + 531))))) then local v303=(406 + 514) -(798 + 122);local v304;while true do if ((2582>=(33 + 108)) and (v303==(1749 -(1043 + 706)))) then v304=0 -0;while true do if (((3074 + 626)>=(4869 -(143 + 200 + 908))) and (v304==((5980 -4226) -(1341 + 413)))) then local v337=0 + 0;while true do if ((v337==(1 + 0)) or ((1749 -(79 + 587))>=(3889 + 29))) then v304=1 -0;break;end if (((1867 -(1600 + 267))==v337) or (3872<(17925 -14199))) then v203=v86[2 -0];v204={};v337=1 + 0;end end end if ((v304==1) or ((3857 + 1018)<(15224 -11526))) then v202=2 -1;break;end end break;end end end if ((v202==(1516 -(839 + 676))) or ((9421 -5429)<=2256)) then for v319=1 + 0, #v83 do local v320=0 -(0 + 0);local v321;local v322;while true do if (((2227 + 2190)>(16017 -11612)) and (v320==(1 + (0 -0)))) then while true do if (((3753 -(91 + 622 + 288))<=(11370 -8099)) and (v321==(619 -((2354 -(1155 + 669)) + 89)))) then v322=v83[v319];for v359=0 + 0, #v322 do local v360=(0 -0) + 0;local v361;local v362;local v363;local v364;while true do if ((0==v360) or (856>(2545 -552))) then v361=0;v362=nil;v360=160 -(66 + 93);end if (((2215 -(55 + 177))<=4772) and ((2 + 0)==v360)) then while true do if ((((5045 -2203) -(800 + 383))<(2984 -(98 + 114 + 94))) and (0==v361)) then local v381=0;while true do if ((4168>(2640 -(116 + 106))) and (v381==1)) then v361=1 + 0;break;end if ((v381==0) or ((8373 -4971)>=(6338 -2835))) then v362=v322[v359];v363=v362[2 -1];v381=1 + 0;end end end if ((v361==1) or ((920 + 6)<575)) then v364=v362[2];if (((v363==v84) and (v364>=v203)) or ((1392 -(16 + 54))<(1062 -651))) then local v387=0 + 0;local v388;while true do if ((v387==(412 -(42 + 370))) or ((1389 -988)>((5849 -(792 + 677)) -(948 + 1766)))) then v388=1614 -(1012 + 602);while true do if (((1923 -(485 + 1438))==v388) or ((3532 -(5725 -4207))==(1186 + 3146))) then v204[v364]=v363[v364];v362[117 -((269 -196) + 38 + 5)]=v204;break;end end break;end end end break;end end break;end if (((2065 -(496 + 144))>=(2660 -(1388 + 96))) and (v360==1)) then v363=nil;v364=nil;v360=1294 -(1148 + 144);end end end break;end end break;end if (((12021 -7121)>=(7574 -4653)) and (v320==(0 + 0))) then local v328=0;while true do if (((0 + 0)==v328) or ((2549 -(209 + 1456))>(3796 + 311))) then v321=0;v322=nil;v328=1;end if ((v328==(1 + 0)) or (3640<=429)) then v320=(7 -4) -2;break;end end end end end break;end end break;end if (((4478 -(238 + 642))>(4635 -(1455 + (38 -12)))) and (v201==0)) then local v267=0;while true do if ((v267==(734 -(525 + 209))) or ((4793 -(39 + 246))<(1108 + 772))) then v202=0;v203=nil;v267=1 + 0;end if ((((4 -3) -0)==v267) or (879==(3283 -801))) then v201=1 + 0;break;end end end end break;end if (((3648 -2735)==(2264 -1351)) and (v200==(0 -(0 + 0)))) then v201=1715 -(1172 + 543);v202=nil;v200=1;end if ((v200==(4 -3)) or ((1148 -(58 + 538))>=(8734 -5781))) then v203=nil;v204=nil;v200=2;end end end elseif ((1359>466) and (v87<=(7 + 23))) then v84[v86[2 -0]][v84[v86[2 + 1]]]=v86[1 + 3];elseif (((1168 + 824)<=(6571 -(1545 + 284))) and (v87==(31 + 0))) then local v205=0 -(1735 -(1259 + 476));local v206;local v207;local v208;local v209;while true do if ((v205==(1945 -(1651 + 294))) or ((928 + 2919)<(385 -201))) then v206=0 + 0;v207=nil;v205=1 + 0;end if (((8533 -6687)<=(3026 -(665 + 358))) and ((3 -2)==v205)) then v208=nil;v209=nil;v205=4 -2;end if (((1793 -((32 -15) + 49))<(3950 -(953 + 154))) and ((783 -(554 + 227))==v205)) then while true do if ((v206==(0 -0)) or (189==3017)) then v207=v86[4 -2];v208=v84[v207];v206=94 -(34 + 59);end if ((v206==(760 -(323 + 436))) or ((15925 -11115)<=2928)) then v209=v86[2 + 1];for v283=871 -(188 + (1025 -343)),v209 do v208[v283]=v84[v207 + v283];end break;end end break;end end else local v210=1746 -(744 + (1940 -938));local v211;local v212;local v213;local v214;local v215;local v216;while true do if (((3019 -(78 + 418))<(5023 -(1037 + 415))) and (v210==(1 -0))) then v213=nil;v214=nil;v210=2;end if ((2152==2152) and (3==v210)) then while true do if (((4454 -(1022 + 151))==(7831 -4550)) and (v211==((895 + 704) -(138 + 1459)))) then for v286=1,v213 do v84[v214 + v286]=v215[v286];end v216=v215[(1 -0) + 0];v211=920 -(396 + 521);end if (((4127 + 190)>=(4928 -(746 + 1234))) and (v211==(1 + 0))) then v214=v212 + (1250 -(1052 + 196));v215={v84[v212](v84[v212 + (1 -0)],v84[v214])};v211=2;end if ((v211==0) or ((2032 + 512)>=4456)) then v212=v86[2];v213=v86[3 + 1];v211=(1475 -904) -(221 + 349);end if ((v211==(1 + 2)) or ((1673 -(21 + 5 + 47))>=(13891 -8950))) then if (v216 or ((2430 -(1392 + 561))==(6861 -5003))) then local v289=0;local v290;local v291;while true do if ((v289==(1866 -(222 + 1644))) or ((1901 -(308 + 646))>((9566 -4018) -(251 + 1260)))) then v290=0 -(0 + 0);v291=nil;v289=3 -2;end if (((4766 -((2800 -1497) + 394))==(69 + 3000)) and (v289==(1 + (105 -(29 + 76))))) then while true do if ((((942 + 1354) -(39 + 263 + 777))>=(216 + 219)) and (v290==(1344 -(1122 + 222)))) then v291=0 -0;while true do if (((0 + 0)==v291) or ((9291 -6242)<=(4694 -(198 + 1641)))) then v84[v214]=v216;v65=v86[3];break;end end break;end end break;end end else v65=v65 + (1 -0);end break;end end break;end if ((v210==(2 + 0)) or ((7592 -3255)>(22378 -17557))) then v215=nil;v216=nil;v210=1 + 2;end if ((3906>=3508) and (0==v210)) then v211=0 + (129 -(16 + 113));v212=nil;v210=(527 -(433 + 93)) -0;end end end elseif (((7243 -4713)>=(3794 -2894)) and (v87<=(7 + 2 + 28))) then if ((v87<=(50 -16)) or ((1956 -937)>(2894 -(48 + 866)))) then if ((v87==(2 + 31)) or (3640<=(1905 -(787 + 338)))) then v84[v86[1725 -(1225 + 498)]]=v84[v86[3]] -v86[4];else local v156=0;local v157;local v158;while true do if (((4432 -((1341 -(164 + 290)) + 285))>=(2413 + 331)) and (v156==0)) then v157=0;v158=nil;v156=(1839 -999) -((2068 -(794 + 542)) + 107);end if (((5665 -(30 + 748))>4249) and (v156==(2 -1))) then while true do if (((146 + 3176)>=(5246 -3820)) and (v157==(297 -(206 + 91)))) then v158=v86[2 + 0];v84[v158]=v84[v158](v84[v158 + (2 -1)]);break;end end break;end end end elseif (((92 + 1309)<(3836 -(63 + 413))) and (v87<=(1230 -(169 + 1026)))) then v84[v86[4 -2]]=v86[1249 -(609 + 637)]~=(0 + 0);elseif (((2713 + 1735)<(12629 -8051)) and (v87>36)) then v84[v86[4 -(3 -1)]]=v84[v86[3]];else v84[v86[2 -(818 -(375 + 443))]]=v34[v86[3]];end elseif (((1094 + 3253)==(6152 -(1304 + 501))) and (v87<=(111 -71))) then if ((v87<=(30 + 8)) or ((3032 -(103 + 347))>(865 + 2189))) then for v160=v86[5 -3],v86[2 + 1] do v84[v160]=nil;end elseif ((v87==(11 + 28)) or ((980 -(687 + 50))>(1047 + 1029))) then local v221=0 -0;local v222;local v223;local v224;while true do if ((v221==((1860 -859) -(580 + 421))) or ((2481 -(455 + 26 + 288))>=(4008 -1094))) then v222=0 + 0;v223=nil;v221=1;end if (((5584 -4082)==(2745 -(1220 + 23))) and (v221==(1 -0))) then v224=nil;while true do if (((2784 + 1124)>=899) and (v222==0)) then local v274=0 -0;while true do if ((v274==(1 + 0)) or ((384 + 3975)==(3537 -(570 + 559)))) then v222=1692 -(393 + 541 + 757);break;end if ((v274==(0 -0)) or ((1907 -1373)==(5178 -(1342 + 523)))) then v223=1198 -(293 + 905);v224=nil;v274=1 + 0;end end end if ((v222==(893 -(674 + 218))) or ((2293 -(948 + (823 -477)))==(1661 + 1733))) then while true do if ((v223==(0 -0)) or (4820<(4105 + 476))) then v224=v86[1 + 1];v84[v224](v84[v224 + (621 -(244 + 376))]);break;end end break;end end break;end end else v84[v86[1 + 1]]=v84[v86[6 -3]][v84[v86[(1349 -(599 + 28)) -(675 + 17 + 26)]]];end elseif (((3191 -(1098 + 58))<(1994 + 1039)) and (v87<=(14 + (35 -8)))) then if ((v84[v86[4 -2]]~=v86[2 + 2]) or (1951>=((2410 -(801 + 200)) + 2595))) then v65=v65 + 1 + 0;else v65=v86[651 -(31 + 617)];end elseif (((7658 -5264)<=3090) and (v87==(40 + 2))) then v34[v86[4 -1]]=v84[v86[2 + 0]];else local v230=(588 -(182 + 406)) -0;local v231;local v232;while true do if (((4982 -2981)<(2001 + 1291)) and (v230==(906 -(108 + 797)))) then while true do if ((v231==(1332 -(570 + 762))) or ((7625 -4576)>(4559 -(110 + 801)))) then v232=v86[1 + 1 + 0];v84[v232](v12(v84,v232 + 1,v86[(1752 -(468 + 1229)) -(50 + 2)]));break;end end break;end if ((v230==0) or (1017>=((2487 -(551 + 662)) + 2577))) then v231=44 -(26 + 18);v232=nil;v230=102 -(24 + 77);end end end v65=v65 + (191 -(176 + 14));break;end if ((v92==(0 + 0)) or ((330 + 2112)>(8362 -4800))) then local v103=0 + 0;while true do if (((5146 -(995 + 183))>(2669 -(58 + 33))) and (v103==(1692 -(1241 + 450)))) then v92=1 + 0;break;end if ((((4242 + 851) -1935)>=640) and (v103==0)) then local v107=0 + 0;while true do if (((1811 + 981)>(2538 -(826 + 613))) and (v107==(1 + (1587 -(443 + 1144))))) then v103=1556 -(60 + 863 + 632);break;end if (((2581 -(346 + 490))==1745) and (v107==(0 + 0))) then v86=v78[v65];v87=v86[1487 -(196 + 1290)];v107=1 + 0;end end end end end end break;end end break;end end end end;v64=3;end if (1==v64) then v67={...};v68=v11("#",...) -1;v64=2;end end end;end;return v29(v28(),{},v16)(...);end if (v17==6) then v28=nil;v28=function()local v46=0 -0;local v47;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v46~=1) then else v49=nil;v50=nil;v46=2 + 0;end if (v46==(1379 -(176 + 1200))) then v53=nil;while true do local v75=674 -(122 + 552);while true do if (v75==(1341 -(331 + 1009))) then if (v47~=2) then else local v93=0 -0;local v94;while true do if (v93==(0 -0)) then v94=0 -0;while true do local v102=0 -0;while true do if (v102==(0 -0)) then if (0==v94) then local v104=79 -(7 + 72);while true do if (v104==(2 -1)) then v94=1 + 0;break;end if (v104==0) then for v109=1744 -(590 + 1153),v23() do local v110=0 -0;local v111;local v112;local v113;while true do if (v110==(0 + 0)) then v111=0 + 0;v112=nil;v110=784 -(600 + 183);end if (v110~=(1421 -(835 + 585))) then else v113=nil;while true do if (v111==(0 + 0)) then v112=0 -0;v113=nil;v111=1340 -(1052 + 287);end if ((2 -1)~=v111) then else while true do if (v112~=(0 -0)) then else v113=v21();if (v20(v113,1 + 0,2 -1)==0) then local v250=684 -(51 + 633);local v251;local v252;local v253;local v254;local v255;local v256;while true do if (v250~=(8 -6)) then else v255=nil;v256=nil;v250=3;end if (v250==(0 -0)) then v251=146 -(57 + 89);v252=nil;v250=1192 -(674 + 517);end if (v250==(3 + 0)) then while true do if (v251~=(0 + 0)) then else v252=0;v253=nil;v251=1;end if (v251==(1 + 0)) then v254=nil;v255=nil;v251=2;end if (v251==(1887 -(1671 + 214))) then v256=nil;while true do if (v252~=(8 -6)) then else while true do if (v253==(1 + 2)) then if (v20(v255,3,1 + 2)~=1) then else v256[4]=v53[v256[1485 -(465 + 1016)]];end v48[v109]=v256;break;end if (v253==(2 -1)) then local v346=0;local v347;while true do if (v346~=(1157 -(822 + 335))) then else v347=0 -0;while true do if (v347==(0 -0)) then local v376=1664 -(937 + 727);while true do if ((0 + 0)~=v376) then else v256={v22(),v22(),nil,nil};if (v254==0) then local v393=0;local v394;local v395;while true do if (v393==(300 -(86 + 214))) then v394=0 -0;v395=nil;v393=1 -0;end if (v393~=(1 + 0)) then else while true do if (v394==(755 -(80 + 675))) then v395=0 -0;while true do if (v395==(0 + 0)) then v256[1 + 2]=v22();v256[8 -4]=v22();break;end end break;end end break;end end elseif (v254==1) then v256[3]=v23();elseif (v254==2) then v256[1094 -(752 + 339)]=v23() -(2^(40 -24));elseif (v254==(4 -1)) then local v402=555 -(338 + 217);local v403;local v404;while true do if ((1 -0)~=v402) then else while true do if (v403==(0 + 0)) then v404=0;while true do if (v404~=(0 -0)) then else v256[596 -(125 + 468)]=v23() -((2 + 0)^(29 -13));v256[776 -(393 + 379)]=v22();break;end end break;end end break;end if ((0 + 0)~=v402) then else local v408=745 -(331 + 414);while true do if (v408~=(0 + 0)) then else v403=0 + 0;v404=nil;v408=2 -1;end if (v408==(1 + 0)) then v402=261 -(157 + 103);break;end end end end end v376=3 -2;end if (v376~=(1529 -(1525 + 3))) then else v347=1 + 0;break;end end end if (1~=v347) then else v253=2 + 0;break;end end break;end end end if (v253==(2 -0)) then local v348=0 + 0;local v349;while true do if ((0 -0)~=v348) then else v349=249 -(97 + 152);while true do if (v349==0) then if (v20(v255,275 -(107 + 167),1 + 0)~=(1295 -(235 + 1059))) then else v256[4 -2]=v53[v256[2]];end if (v20(v255,566 -(364 + 200),2)~=(2 -1)) then else v256[4 -1]=v53[v256[1 + 2]];end v349=2 -1;end if (v349~=(2 -1)) then else v253=1941 -(433 + 1505);break;end end break;end end end if (v253~=(0 + 0)) then else local v350=1318 -(438 + 880);local v351;while true do if (v350==(170 -(136 + 34))) then v351=0;while true do if (v351~=0) then else local v377=0 -0;while true do if (v377~=(0 + 0)) then else v254=v20(v113,2,7 -4);v255=v20(v113,4,1610 -(174 + 1430));v377=1225 -(177 + 1047);end if ((1 -0)==v377) then v351=2 -1;break;end end end if (v351==(1551 -(145 + 1405))) then v253=1811 -(562 + 1248);break;end end break;end end end end break;end if (v252~=(2 -1)) then else v255=nil;v256=nil;v252=2;end if ((0 + 0)==v252) then v253=0 + 0;v254=nil;v252=1439 -(1305 + 133);end end break;end end break;end if (v250~=(367 -(277 + 89))) then else v253=nil;v254=nil;v250=5 -3;end end end break;end end break;end end break;end end end for v114=1,v23() do v49[v114-(1261 -(653 + 607))]=v28();end v104=1;end end end if (v94~=(1 + 0)) then else local v105=0;while true do if (v105~=(338 -(217 + 121))) then else for v116=1,v23() do v50[v116]=v23();end return v51;end end end break;end end end break;end end end break;end if (v75==(0 + 0)) then local v88=0;while true do if (v88~=0) then else if (v47~=(1 + 0)) then else local v99=0 + 0;local v100;while true do if (v99~=(0 + 0)) then else v100=0;while true do if (v100==0) then v52=v23();v53={};v100=1834 -(1335 + 498);end if (v100==(1 + 0)) then local v106=358 -(333 + 25);while true do if ((1500 -(1202 + 298))~=v106) then else for v118=1 + 0,v52 do local v119=0 -0;local v120;local v121;local v122;while true do if (v119==(120 -(32 + 87))) then v122=nil;while true do if (v120==(1560 -(828 + 731))) then if (v121==(1 + 0)) then v122=v21()~=(0 -0);elseif (v121==2) then v122=v24();elseif (v121==3) then v122=v25();end v53[v118]=v122;break;end if (v120~=0) then else local v163=0 -0;local v164;while true do if (v163~=(1246 -(150 + 1096))) then else v164=0 + 0;while true do if (v164~=(3 -2)) then else v120=1 + 0;break;end if ((0 + 0)==v164) then v121=v21();v122=nil;v164=1;end end break;end end end end break;end if (v119~=0) then else v120=497 -(187 + 310);v121=nil;v119=1;end end end v51[9 -6]=v21();v106=1810 -(1034 + 775);end if (v106==(1507 -(1168 + 338))) then v100=2;break;end end end if (v100~=2) then else v47=2;break;end end break;end end end if ((1440 -(812 + 628))==v47) then local v101=0 + 0;while true do if (v101==(6 -4)) then v47=1;break;end if (v101==0) then v48={};v49={};v101=1;end if (v101==(1 -0)) then v50={};v51={v48,v49,nil,v50};v101=2;end end end v88=3 -2;end if (v88==(1 + 0)) then v75=615 -(204 + 410);break;end end end end end break;end if (v46~=(0 -0)) then else v47=0 -0;v48=nil;v46=1 + 0;end if (v46~=2) then else v51=nil;v52=nil;v46=498 -(102 + 393);end end end;v29=nil;v17=7;end if (v17==1) then v20=nil;v20=function(v35,v36,v37)if v37 then local v70=(v35/(((110 + 897) -(860 + 145))^(v36-1)))%((1052 -(388 + 662))^(((v37-(2 -1)) -(v36-1)) + ((5859 -4515) -(508 + 835))));return v70-(v70%(1 + 0));else local v71=(2 + (0 -0))^(v36-(97 -(60 + 36)));return (((v35%(v71 + v71))>=v71) and (1 + 0)) or 0;end end;v21=nil;v17=2;end if (v17==2) then v21=function()local v54=v1(v15,v18,v18);v18=v18 + 1;return v54;end;v22=nil;v22=function()local v55=0 + 0;local v56;local v57;while true do if (v55==(575 -((636 -271) + 210))) then v56,v57=v1(v15,v18,v18 + 2 + 0);v18=v18 + 2;v55=1;end if (((2 + 0) -(1265 -(151 + 1113)))==v55) then return (v57 * (1040 -784)) + v56;end end end;v17=3;end if (v17==3) then v23=nil;v23=function()local v58=0 + 0;local v59;local v60;local v61;local v62;while true do if ((297 -(17 + 35 + 245))==v58) then v59,v60,v61,v62=v1(v15,v18,v18 + 2 + 1);v18=v18 + ((575 + 81) -(611 + 41));v58=1 -0;end if (v58==(1 -0)) then return (v62 * 16777216) + (v61 * 65536) + (v60 * (2075 -(1005 + 314 + 500))) + v59;end end end;v24=nil;v17=4;end end end vv8(),...);end
